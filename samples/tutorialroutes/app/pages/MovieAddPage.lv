import live-web.dom
import live-web.model
import live-web.clientrouter

import ky from 'ky'

component MovieAddPageState < State{
    boolean isLoading: false
    string error: ''

    fn add(title:string, description:string){
        const data = {title, description}
        this.isLoading = true
        ky.post('/api/add', {json: data}).json()
            .then(data => {
                this.isLoading = false
                if ( data.error ){
                    this.error = data.error
                } else {
                    ClientNavigation.goTo('/')
                }
            })
            .catch(error => {
                this.isLoading = false
                this.error = error
            })
    }
}

component MovieAddPage < Div{
    id: movieAddPage
    classes: ['container']

    MovieAddPageState state: MovieAddPageState{}

    Div{ classes: ['main']
        H1`New entry`
        Form{ props = {action: '/submit-movie-url', method: 'post'}
            Div{ classes: ['form-group']
                Label{ props: ({for: 'movie-title'})
                    T`Movie Title:`
                }
                Input{
                    id: movieTitle
                    glid: 'movie-title'
                    props = {type: 'text', name: 'movieTitle', required: ''}
                }
            }
            Div{ classes: ['form-group']
                Label{ props: ({for: 'movie-description'})
                    T`Description:`
                }
                TextArea{ id: movieDescription
                    glid: 'movie-description'
                    props = {name: 'movieDescription', required: ''}
                }
            }
            Button{ 
                classes: ['submit-btn'] 
                props = {type: 'submit'}
                on click: (e) => {
                    e.preventDefault()
                    movieAddPage.state.add(movieTitle.currentValue, movieDescription.currentValue)
                }

                T`Add Movie`
                
            }
        }
    }

    Div{ classes: ['modal', movieAddPage.state.isLoading ? 'show' : '']
        Div{ classes: ['spinner'] }
    }

    Div{ classes: ['modal', movieAddPage.state.error ? 'show' : '']
        Div{ classes: ['error-message'] T{ text: movieAddPage.state.error } }
        on click: () => movieAddPage.state.error = ''
    }
}