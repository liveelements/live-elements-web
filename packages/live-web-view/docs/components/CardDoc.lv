import live-web.dom
import live-web-view.content
import live-web-view.overlay
import live-web-view.button
import .docs.internal

component CardDoc{
    default children

    Content{
        H1S`Card Component`
        P{
            T`Displays a card with image, title and content.`
        }
        H2S`Card with vertical orientation`
    }

    Example{
        render: Example.RenderType.CSRSSR
        element: Card{ orientation: Card.Vertical
            Figure{
                Img{ 
                    src: 'data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20viewBox%3D%220%200%201200%201200%22%3E%3Ccircle%20cx%3D%22600%22%20cy%3D%22600%22%20r%3D%22500%22%20fill%3D%22%23999%22%20fill-opacity%3D%22.4%22/%3E%3C/svg%3E' 
                }
            }
            Section{ 
                Header{
                    H2{ T`Card Header` }
                }
                P{
                    T`Card description or card content.`
                }
                P{
                    PrimaryButton{ T`View Details` }
                }
            }
        }

        ImportsSource```
            import live-web.dom
            import live-web-view.content
            import live-web-view.button
        ```
        UseSource```
            static any[] use = [Card]
        ```
        ContentSource```
            Card{ orientation: Card.Vertical
                Figure{
                    Img{ 
                        src: \'data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20viewBox%3D%220%200%201200%201200%22%3E%3Ccircle%20cx%3D%22600%22%20cy%3D%22600%22%20r%3D%22500%22%20fill%3D%22%23999%22%20fill-opacity%3D%22.4%22/%3E%3C/svg%3E\' 
                    }
                }
                Section{ 
                    Header{
                        H2{ T\`Card Header\` }
                    }
                    P{
                        T\`Card description or card content.\`
                    }
                    P{
                        PrimaryButton{ T\`View Details\` }
                    }
                }
            }
        ```
    }

    Content{
        H2S`Card with horizontal orientation`
    }


    Example{
        render: Example.RenderType.CSRSSR
            
        element: Card{ orientation: Card.Horizontal
            Figure{
                Img{ 
                    src: 'data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20viewBox%3D%220%200%201200%201200%22%3E%3Ccircle%20cx%3D%22600%22%20cy%3D%22600%22%20r%3D%22500%22%20fill%3D%22%23999%22%20fill-opacity%3D%22.4%22/%3E%3C/svg%3E' 
                }
            }
            Section{ 
                Header{
                    H2{ T`Card Header` }
                }
                P{
                    T`Card description or card content.`
                }
                P{
                    PrimaryButton{ T`View Details` }
                }
            }
        }

        ImportsSource```
            import live-web.dom
            import live-web-view.content
            import live-web-view.button
        ```
        UseSource```
            static any[] use = [Card]
        ```
        ContentSource```
            Card{ orientation: Card.Vertical
                Figure{
                    Img{ 
                        src: \'data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20viewBox%3D%220%200%201200%201200%22%3E%3Ccircle%20cx%3D%22600%22%20cy%3D%22600%22%20r%3D%22500%22%20fill%3D%22%23999%22%20fill-opacity%3D%22.4%22/%3E%3C/svg%3E\' 
                    }
                }
                Section{ 
                    Header{
                        H2{ T\`Card Header\` }
                    }
                    P{
                        T\`Card description or card content.\`
                    }
                    P{
                        PrimaryButton{ T\`View Details\` }
                    }
                }
            }
        ```
    }

    Content{
        H2S`Card Grid`
    }

    Example{
        render: Example.RenderType.CSRSSR
            
        element: CardGrid{
            children: [1, 2, 3, 4, 5, 6].map(card => 
                Card{ orientation: Card.Vertical
                    Figure{
                        Img{ 
                            src: 'data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20viewBox%3D%220%200%201200%201200%22%3E%3Ccircle%20cx%3D%22600%22%20cy%3D%22600%22%20r%3D%22500%22%20fill%3D%22%23999%22%20fill-opacity%3D%22.4%22/%3E%3C/svg%3E' 
                        }
                    }
                    Section{
                        Header{
                            H2{ T`Card Header` }
                        }
                        P{
                            T`Card description or card content.`
                        }
                        P{
                            PrimaryButton{ T`View Details` }
                        }
                    }
                }
            )
        }


        ImportsSource```
            import live-web.dom
            import live-web-view.content
            import live-web-view.button
        ```
        UseSource```
            static any[] use = [Card]
        ```
        ContentSource```
            CardGrid{
                children: [1, 2, 3, 4, 5, 6].map(card => 
                    Card{ orientation: Card.Vertical
                        Figure{
                            Img{ 
                                src: \'data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20viewBox%3D%220%200%201200%201200%22%3E%3Ccircle%20cx%3D%22600%22%20cy%3D%22600%22%20r%3D%22500%22%20fill%3D%22%23999%22%20fill-opacity%3D%22.4%22/%3E%3C/svg%3E\' 
                            }
                        }
                        Section{ 
                            Header{
                                H2{ T\`Card Header\` }
                            }
                            P{
                                T\`Card description or card content.\`
                            }
                            P{
                                PrimaryButton{ T\`View Details\` }
                            }
                        }
                    })
            }
        ```
    }

}
