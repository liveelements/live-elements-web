import live-web.dom
import live-web.behavior
import live-elements-web-server.style

component Tooltip < Div{
    string[] extraClasses: []
    classes: this.extraClasses.concat([ScopedStyle.className(Tooltip)])

    constructor(text:string){
        super()
        Tooltip.prototype.__initialize.call(this)
        if ( text )
            this.children = [new T(text)]
    }

    DOMBehavior{
        domReady: (d) => {
            let current = d.parentNode
            while ( current ){
                if ( 'c' in current.dataset ){
                    if ( current.dataset.c === 'tooltiparea' ){
                        break
                    }
                }
                current = current.parentNode
            }
            if ( current ){
                let timeoutTime = parseInt(current.dataset.timeout)
                let timeout = null

                current.addEventListener('mouseenter', function () {
                    const rect = d.getBoundingClientRect()
                    const midX = rect.left + rect.width  / 2
                    const midY = rect.top  + rect.height / 2
                    const halfW = window.innerWidth  / 2
                    const halfH = window.innerHeight / 2

                    d.classList.remove(
                        'position-left',
                        'position-right',
                        'position-top',
                        'position-bottom'
                    )

                    if (midX > halfW) {
                        d.classList.add('position-left');
                    } else {
                        d.classList.add('position-right');
                    }

                    
                    if (midY > halfH) {
                        d.classList.add('position-top');
                    } else {
                        d.classList.add('position-bottom');
                    }

                    timeout = window.setTimeout(function () {
                        current.classList.add('active')
                        if ( timeoutTime > 0 )
                            setTimeout(() => {
                                current.classList.remove('active')
                            }, timeoutTime)
                    }, 500)
                })

                current.addEventListener('mouseleave', function () {
                    window.clearTimeout(timeout)
                    current.classList.remove('active')
                })
            }
        }
    }
}