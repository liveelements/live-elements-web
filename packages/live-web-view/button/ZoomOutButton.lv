import live-web.dom
import live-web.behavior
import live-elements-web-server.style

component ZoomOutButton < IconButton{ //HERE
    id: zoomOutButton
    static Array use = []

    id: zoomOutButton

    Svg{ 
        props: ({xmlns: 'http://www.w3.org/2000/svg', width: '15', height: '15', viewBox: '0 0 20 20'})
        Circle{ 
            props: ({cx: '8', cy: '8', r: '6', fill: 'none', stroke: { '' : 'currentColor', width: '2' } })
        }
        Line{ 
            props: ({x1: '13', y1: '13', x2: '18', y2: '18', stroke: { '' : 'currentColor', width: '2', linecap: 'round' } })
        }
        Line{ 
            props: ({x1: '5', y1: '8', x2: '11', y2: '8', stroke: { '' : 'currentColor', width: '2', linecap: 'round' } })
        }
    }

    Object target: null

    DOMBehavior{
        domEvents: {
            click: (e) => {
                if ( zoomOutButton.target ){
                    const target = zoomOutButton.target
                    let targetScale = 1
                    if ( target.props.data ){
                        if ( target.props.data.zoomScale ){
                            targetScale = parseFloat(target.props.data.zoomScale)
                        }
                    }
                    if ( targetScale <= 0.1 ){
                        return
                    }
                    const newScaleAdd = targetScale - 0.1
                    const newScale = Math.round(newScaleAdd * 100) / 100
                    const newSize = 100 / newScale

                    if ( target.props.data )
                        target.props.data.zoomScale = '' + newScale
                    else
                        target.props.data = { zoomScale: '' + newScale }

                    target.propsChanged.emit()

                    target.style = {
                        width : `${newSize}%`,
                        height: `${newSize}%`,
                        transform: `scale(${newScale})`,
                        transformOrigin: 'top left'
                    }
                }
            }
        }
    }
}