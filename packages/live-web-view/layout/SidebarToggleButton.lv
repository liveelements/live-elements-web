import live-web.dom
import live-web.behavior
import live-elements-web-server.style
import .button

component SidebarToggleButton < IconButton{
    classes: this.extraClasses.concat([ScopedStyle.className(SidebarToggleButton)])
    
    props = {
        data: {
            layout: ScopedStyle.className(SidebarLayout),
            toggle: ScopedStyle.className(Sidebar)
        }
    }

    Svg{ 
        props = {width: '15', height: '15', viewBox: '0 0 15 15', fill: 'none', xmlns: 'http://www.w3.org/2000/svg'}
        Rect{ 
            props = {x: '0', y: '0', width: '15', height: '15', rx: '2.5', stroke: 'currentColor'}
        }
        Rect{
            props = {x: '2.5', y: '2.5', width: '4', height: '10', rx: '0.5', fill: 'currentColor', stroke: 'currentColor'}
        }
    }

    DOMBehavior{
        domEvents = {
            click: (e) => {
                e.preventDefault()
                const sidebarLayoutClass = e.currentTarget.dataset.layout
                const sidebarClass = e.currentTarget.dataset.toggle
                let sidebarLayout = e.currentTarget
                while ( sidebarLayout ){
                    if ( sidebarLayout.classList && sidebarLayout.classList.contains(sidebarLayoutClass) )
                        break
                    sidebarLayout = sidebarLayout.parentNode
                }
                if ( !sidebarLayout ){
                    throw new Error("Failed to find sidebar layout. SidebarToggleButton must be placed inside a SidebarLayout.")
                }

                const sidebars = sidebarLayout.getElementsByClassName(sidebarClass)
                if ( !sidebars.length ){
                    throw new Error("Failed to find sidebar.")
                }
                const sidebar = sidebars[0]
                sidebar.classList.toggle('show')
            }
        }
    }
}