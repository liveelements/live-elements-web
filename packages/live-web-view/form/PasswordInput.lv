import live-web.dom
import live-web.behavior
import live-web-view.button
import live-elements-web-server.view
import live-elements-web-server.style

component PasswordInput < Div{
    id: passwordInput

    static any[] use = [
        IconButton, 
        ScopedStyle{ src: './style/passwordinput.css' process: '../style/CSSProcessor.lv' },
        ScopedStyle{ src: '../style/global.css' process: '../style/CSSProcessor.lv' } 
    ]

    string name
    string placeholder
    string value

    string currentValue: input.currentValue

    string[] extraClasses: []
    classes: this.extraClasses.concat([ScopedStyle.className(PasswordInput)])

    Input{ 
        id: input
        type: 'password'
        name: passwordInput.name
        placeholder: passwordInput.placeholder
        value: passwordInput.value
    }
    Button{
        Svg{ props = {width: '19', height: '15', viewBox: '0 0 26 20', fill: 'none', xmlns: 'http://www.w3.org/2000/svg'}
            Path{ 
                props = {d: 'M13 8C15.4289 8 17 9.53984 17 11C17 12.4602 15.4289 14 13 14C10.5711 14 9 12.4602 9 11C9 9.53984 10.5711 8 13 8Z', stroke: {'': 'currentColor',width: '2'}}
            }
            Path{ 
                props = {d: 'M1 11C2.63636 8.33333 7.21818 3 12.4545 3C17.6909 3 23 8 25 10.5', stroke: {'': 'currentColor',width: '2'}}
            }
        }
        
        Svg{ props = {width: '19', height: '15', viewBox: '0 0 26 20', fill: 'none', xmlns: 'http://www.w3.org/2000/svg'}
            Path{ 
                props = {d: 'M13 8C15.4289 8 17 9.53984 17 11C17 12.4602 15.4289 14 13 14C10.5711 14 9 12.4602 9 11C9 9.53984 10.5711 8 13 8Z', stroke: {'': 'currentColor',width: '2'}}
            }
            Path{ 
                props = {d: 'M1 11C2.63636 8.33333 7.21818 3 12.4545 3C17.6909 3 23 8 25 10.5', stroke: {'': 'currentColor',width: '2'}}
            }
            Line{ 
                props = {x1: '6.23178', y1: '19.3598', x2: '21.2318', y2: '1.35982', stroke: {'': 'currentColor',width: '2'}}
            }
        }

    }


    DOMBehavior{
        domReady: d => {
            const button = d.querySelector('button')
            const input = d.querySelector('input')
            button.onclick = e => {
                e.preventDefault()
                input.type = input.type === 'password' ? 'text' : 'password'
                if ( input.type === 'password' ){
                    button.classList.remove('visible')
                } else {
                    button.classList.add('visible')
                }
            }
        }
        
    }

}