import live-web.dom
import live-web.model
import live-web.behavior
import live-elements-web-server.style

component ModalBox < Div{}

component Modal < Div{
    id: modal

    static any[] use = [ 
        ScopedStyle{ src: './style/modal.css' process: 'live-web-view/style/CSSProcessor.lv' }
    ]

    string[] extraClasses: []
    classes: this.extraClasses.concat([ScopedStyle.className(Modal)])

    DOMElement box

    fn show(box:DOMElement){
        if ( box )
            this.box = box
        this.classes = this.classes.concat(['visible'])
    }

    fn hide(){
        this.classes = this.classes.filter( c => c !== 'visible')
    }

    Div{ classes: ['modal-backdrop'] 
    }
    Div{ classes: ['modal-content']
        children: modal.box ? [
            modal.box,
            
        ] : []
    }

    DOMBehavior{
        domEvents = {
            click: (e) => {
                if ( e.target.classList.contains('modal-content') ){
                    if (typeof modal !== 'undefined'){
                        modal.hide()
                    } else {
                        e.target.parentNode.classList.remove('visible')
                    }
                }
        
            }
        }
    }
}

