import live-web.dom
import live-elements-web-server.page

component PageProperties{
    string title: null
    default children: []
    
    set children(chs:any){
        BaseElement.setProperty(this, 'children', chs)
    }

    fn expand(domDocument:Object){
        const document = domDocument ? domDocument : window.document
        if ( this.title !== null )
            document.title = this.title
        for ( var i = 0; i < this.children.length; ++i ){
            var child = this.children[i]
            if ( this.children[i] instanceof Meta ){
                var meta =  document.createElement("meta")
                var props = this.children[i].attributes
                for (const [key, value] of Object.entries(props)) {
                    meta.setAttribute(key, value)
                }
                document.head.appendChild(meta)
            } else if ( this.children[i] instanceof Script ){
                var script = document.createElement("script")
                var props = this.children[i].attributes
                for (const [key, value] of Object.entries(props)) {
                    if ( key !== 'src' )
                        script.setAttribute(key, value)
                }
                if ( this.children[i].children.length > 0 ){
                    const t = this.children[i].children[0]
                    if ( t instanceof T ){
                        script.textContent = t.text
                    }
                    if ( script.src )
                        script.src = this.children[i].src
                } else {
                    script.src = this.children[i].src
                }
                if ( this.children[i].preload ){
                    document.head.appendChild(script)
                } else {
                    document.body.appendChild(script)
                }
            } else if ( this.children[i] instanceof Link ){
                
                var link =  document.createElement("link")
                var props = this.children[i].attributes
                for (const [key, value] of Object.entries(props)) {
                    link.setAttribute(key, value)
                }
                document.head.appendChild(link)
            } else if ( this.children[i] instanceof StyleLink ){
                var link =  document.createElement("link");
                link.rel = 'stylesheet'
                link.href = this.children[i].href
                document.head.appendChild(link)
            } else if ( this.children[i] instanceof Body ){
                const body = this.children[i]
                const attributes = body.attributes
                for (let key in attributes ){
                    var name = key.replace(/([A-Z])/g, '-$1').toLowerCase()
                    document.body.setAttribute(name, attributes[key]);
                }
                if ( body.classes.length ){
                    document.body.className = body.classes.join(' ')
                }
            }
        }
    }
}