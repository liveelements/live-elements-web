import live-web.dom

component Hydration{
    static fn hydrate(node:DOMElement, domNode:Object){
        if (!node || !domNode){
            throw new Error(`Hydration failed due to null nodes: node:${node}, dom:${domNode}`)
        }

        if ( node.tag.toLowerCase() !== domNode.tagName.toLowerCase() )
            throw new Error(`Tag mismatch: expected <${node.tag}>, found <${domNode.tagName.toLowerCase()}>`)

        if (node._domEvents){
            for (let [event, handler] of Object.entries(node._domEvents)) {
                domNode[event] = handler
            }
        }
        node.dom = domNode

        if (node.children && node.children.length){
            const domChildren = domNode.children
            let index = 0
            for ( let i = 0; i < node.children.length; ++i ){
                const child = node.children[i]
                if ( child instanceof DOMElement ){
                    if (domChildren[index]){
                        Hydration.hydrate(child, domChildren[index])
                    } else {
                        throw new Error(`Hydration failed to due different node count.`)
                    }
                    ++index
                }
            }
        }
    }
}