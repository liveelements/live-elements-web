component Input < DOMElement{
    constructor(){
        super('input')
        Input.prototype.__initialize.call(this)
    }

    string name
    on nameChanged: () => { this.setOwnAttributeAndUpdate('name', this.name) }
    string type
    on typeChanged: () => { this.setOwnAttributeAndUpdate('type', this.type) }
    string placeholder
    on placeholderChanged: () => { this.setOwnAttributeAndUpdate('placeholder', this.placeholder) }
    number min
    on minChanged: () => { if ( this.min !== undefined ) this.setOwnAttributeAndUpdate('min', this.min) }
    number max
    on maxChanged: () => { if ( this.max !== undefined ) this.setOwnAttributeAndUpdate('max', this.max) }
    boolean autofocus
    on autofocusChanged: () => { if (this.autofocus) this.setOwnAttributeAndUpdate('autofocus', this.autofocus) }
    boolean required
    on requiredChanged: () => { if (this.required !== undefined ) this.setOwnAttributeAndUpdate('required', this.required) }
    any value
    on valueChanged: () => {
        if ( this.type === 'checkbox' ){
            if ( this.value )
                this.setOwnAttribute('checked', this.value)
            else
                this.deleteOwnAttribute('checked')
        } else {
            this.setOwnAttribute('value', this.value)
        }
         if ( this.dom ){
            if ( this.type === 'checkbox' ){
                this.dom.checked = this.value
            } else {
                this.dom.value = this.value
            }
        } else {
            this.attributesChanged.emit()
        }
        this.currentValue = this.value
    }
    any currentValue

    fn resetValue(){
        if ( this.value !== '' ){
            this.value = ''
        } else {
            if ( this.dom ){
                this.dom.value = ''
            }
        }
    }

    on input: () => {
        if ( this.type === 'checkbox' ){
            this.currentValue = this.dom.checked
        } else {
            this.currentValue = this.dom.value
        }
    }

    fn on(eventName:string, fn:any){
        if ( eventName === 'input' ){
            this._initializeDOMEvent(eventName, 'on' + eventName)
            BaseElement.prototype.on.call(this, eventName, fn)
        } else {
            DOMElement.prototype.on.call(this, eventName, fn)
        }
    }

}