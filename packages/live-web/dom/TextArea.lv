
component TextArea < DOMElement{

    constructor(){
        super('textarea')
        TextArea.prototype.__initialize.call(this)
    }

    string placeholder: ''
    on placeholderChanged: () => { this.setOwnAttributeAndUpdate('placeholder', this.placeholder) }

    string currentValue: ''
    on input: () => { 
        this.currentValue = this.dom.value 
    }
    on domChanged: () => {
        if ( this.dom )
            this.currentValue = this.dom.value
    }
    string value: ''
    on valueChanged: () => {
        this.children = [T.(this.value){}]
        if ( this.dom )
            this.dom.value = this.value
        this.currentValue = this.value
    }

    fn on(eventName:string, fn:any){
        if ( eventName === 'input' ){
            this._initializeDOMEvent(eventName, 'on' + eventName)
            BaseElement.prototype.on.call(this, eventName, fn)
        } else {
            DOMElement.prototype.on.call(this, eventName, fn)
        }
    }
}